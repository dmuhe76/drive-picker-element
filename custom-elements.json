{
	"schemaVersion": "1.0.0",
	"readme": "",
	"modules": [
		{
			"kind": "javascript-module",
			"path": "dist/drive-picker.js",
			"declarations": [
				{
					"kind": "variable",
					"name": "DrivePickerElement",
					"default": "class extends LitElement { constructor() { super(...arguments); this.scope = \"https://www.googleapis.com/auth/drive.file\"; this.title = \"\"; this.visible = true; } /** * The `google.Picker.View` objects to display in the picker as defined by the slot elements. */ get views() { return nestedViews(this) ?? [new google.picker.DocsView()]; } async connectedCallback() { super.connectedCallback(); await loadApi(); this.observer = new MutationObserver((mutations) => { const filteredMutations = mutations.filter( (mutation) => mutation.type === \"childList\" || mutation.type === \"attributes\" && mutation.target !== this ); if (filteredMutations.length) { this.requestUpdate(); } }); this.observer?.observe(this, { childList: true, subtree: true, attributes: true }); } update(changedProperties) { if (!(changedProperties.size === 1 && changedProperties.has(\"visible\"))) { this.picker?.dispose(); this.picker = void 0; } if (changedProperties.has(\"oauthToken\")) { this._oauthToken = this.oauthToken; } if (this.visible && changedProperties.has(\"clientId\") || changedProperties.has(\"scope\") || !this._oauthToken) { retrieveAccessToken(this.clientId, this.scope).then((oauthToken) => { this._oauthToken = oauthToken; this.requestUpdate(); }); } super.update(changedProperties); } render() { if (!this.picker) { this.build(); } this.picker?.setVisible(this.visible); return html`<slot></slot>`; } build() { if (!this._oauthToken) { return; } let builder = new google.picker.PickerBuilder().setOAuthToken(this._oauthToken).setCallback((data) => { this.callbackToDispatchEvent(data); }); for (const view of this.views) { builder = builder.addView(view); } builder = setBuilderProperties(builder, this); this.picker = builder.build(); } callbackToDispatchEvent(data) { this.visible = Boolean(this.picker?.isVisible()); this.dispatch(data.action, data); } disconnectedCallback() { this.picker?.dispose(); super.disconnectedCallback(); } dispatch(type, detail) { return this.dispatchEvent(new CustomEvent(type, { detail })); } createRenderRoot() { return this; } }"
				}
			],
			"exports": [
				{
					"kind": "js",
					"name": "DrivePickerElement",
					"declaration": {
						"name": "DrivePickerElement",
						"module": "dist/drive-picker.js"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "dist/drive-picker.stories.js",
			"declarations": [
				{
					"kind": "variable",
					"name": "drive_picker_stories_default",
					"default": "meta"
				},
				{
					"kind": "variable",
					"name": "Primary",
					"type": {
						"text": "object"
					},
					"default": "{ args: { visible: true, clientId: \"675807958095-nsptdcn5qdb6pl44cge1c6ghact9t5q0.apps.googleusercontent.com\", developerKey: \"AIzaSyAdqZwr-cdocUdGbt9l0zc5s58jnrGseOY\", appId: \"675807958095\" } }"
				},
				{
					"kind": "variable",
					"name": "DocsView",
					"type": {
						"text": "object"
					},
					"default": "{ args: { visible: true, clientId: \"675807958095-nsptdcn5qdb6pl44cge1c6ghact9t5q0.apps.googleusercontent.com\", developerKey: \"AIzaSyAdqZwr-cdocUdGbt9l0zc5s58jnrGseOY\", appId: \"675807958095\" }, render: (props) => drivePickerTemplate( props, html2`<drive-picker-docs-view ownedByMe=\"\"></drive-picker-docs-view>` ) }"
				}
			],
			"exports": [
				{
					"kind": "js",
					"name": "DocsView",
					"declaration": {
						"name": "DocsView",
						"module": "dist/drive-picker.stories.js"
					}
				},
				{
					"kind": "js",
					"name": "Primary",
					"declaration": {
						"name": "Primary",
						"module": "dist/drive-picker.stories.js"
					}
				},
				{
					"kind": "js",
					"name": "default",
					"declaration": {
						"name": "drive_picker_stories_default",
						"module": "dist/drive-picker.stories.js"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "dist/index.js",
			"declarations": [
				{
					"kind": "variable",
					"name": "DrivePickerElement",
					"default": "class extends LitElement { constructor() { super(...arguments); this.scope = \"https://www.googleapis.com/auth/drive.file\"; this.title = \"\"; this.visible = true; } /** * The `google.Picker.View` objects to display in the picker as defined by the slot elements. */ get views() { return nestedViews(this) ?? [new google.picker.DocsView()]; } async connectedCallback() { super.connectedCallback(); await loadApi(); this.observer = new MutationObserver((mutations) => { const filteredMutations = mutations.filter( (mutation) => mutation.type === \"childList\" || mutation.type === \"attributes\" && mutation.target !== this ); if (filteredMutations.length) { this.requestUpdate(); } }); this.observer?.observe(this, { childList: true, subtree: true, attributes: true }); } update(changedProperties) { if (!(changedProperties.size === 1 && changedProperties.has(\"visible\"))) { this.picker?.dispose(); this.picker = void 0; } if (changedProperties.has(\"oauthToken\")) { this._oauthToken = this.oauthToken; } if (this.visible && changedProperties.has(\"clientId\") || changedProperties.has(\"scope\") || !this._oauthToken) { retrieveAccessToken(this.clientId, this.scope).then((oauthToken) => { this._oauthToken = oauthToken; this.requestUpdate(); }); } super.update(changedProperties); } render() { if (!this.picker) { this.build(); } this.picker?.setVisible(this.visible); return html`<slot></slot>`; } build() { if (!this._oauthToken) { return; } let builder = new google.picker.PickerBuilder().setOAuthToken(this._oauthToken).setCallback((data) => { this.callbackToDispatchEvent(data); }); for (const view of this.views) { builder = builder.addView(view); } builder = setBuilderProperties(builder, this); this.picker = builder.build(); } callbackToDispatchEvent(data) { this.visible = Boolean(this.picker?.isVisible()); this.dispatch(data.action, data); } disconnectedCallback() { this.picker?.dispose(); super.disconnectedCallback(); } dispatch(type, detail) { return this.dispatchEvent(new CustomEvent(type, { detail })); } createRenderRoot() { return this; } }"
				},
				{
					"kind": "variable",
					"name": "DrivePickerDocsViewElement",
					"default": "class extends LitElement2 { constructor() { super(...arguments); this.viewId = \"DOCS\"; this.mode = \"GRID\"; } /** * Gets the Google Drive Picker view based on the current property values. * @returns {google.picker.DocsView} The Google Drive picker view. */ get view() { const view = new google.picker.DocsView( this.viewId && google.picker.ViewId[this.viewId] ); if (this.label) { view.setLabel(this.label); } if (this.enableDrives !== void 0) { view.setEnableDrives(this.enableDrives); } if (this.includeFolders !== void 0) { view.setIncludeFolders(this.includeFolders); } if (this.mimeTypes) { view.setMimeTypes(this.mimeTypes); } if (this.mode) { view.setMode(google.picker.DocsViewMode[this.mode]); } if (this.ownedByMe !== void 0) { view.setOwnedByMe(this.ownedByMe); } if (this.parent) { view.setParent(this.parent); } if (this.query) { view.setQuery(this.query); } if (this.selectFolderEnabled !== void 0) { view.setSelectFolderEnabled(this.selectFolderEnabled); } if (this.starred !== void 0) { view.setStarred(this.starred); } return view; } }"
				}
			],
			"exports": [
				{
					"kind": "js",
					"name": "DrivePickerDocsViewElement",
					"declaration": {
						"name": "DrivePickerDocsViewElement",
						"module": "dist/index.js"
					}
				},
				{
					"kind": "js",
					"name": "DrivePickerElement",
					"declaration": {
						"name": "DrivePickerElement",
						"module": "dist/index.js"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "dist/types.js",
			"declarations": [],
			"exports": []
		},
		{
			"kind": "javascript-module",
			"path": "src/index.ts",
			"declarations": [],
			"exports": [
				{
					"kind": "js",
					"name": "*",
					"declaration": {
						"name": "*",
						"package": "./drive-picker"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "src/utils.ts",
			"declarations": [
				{
					"kind": "function",
					"name": "loadApi",
					"parameters": [
						{
							"name": "api",
							"default": "\"client:picker\""
						}
					]
				},
				{
					"kind": "function",
					"name": "retrieveAccessToken",
					"return": {
						"type": {
							"text": "Promise<string>"
						}
					},
					"parameters": [
						{
							"name": "clientId",
							"type": {
								"text": "string"
							}
						},
						{
							"name": "scope",
							"type": {
								"text": "string"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "injectScript",
					"return": {
						"type": {
							"text": "Promise<void>"
						}
					},
					"parameters": [
						{
							"name": "src",
							"type": {
								"text": "string"
							}
						}
					]
				}
			],
			"exports": [
				{
					"kind": "js",
					"name": "loadApi",
					"declaration": {
						"name": "loadApi",
						"module": "src/utils.ts"
					}
				},
				{
					"kind": "js",
					"name": "retrieveAccessToken",
					"declaration": {
						"name": "retrieveAccessToken",
						"module": "src/utils.ts"
					}
				},
				{
					"kind": "js",
					"name": "injectScript",
					"declaration": {
						"name": "injectScript",
						"module": "src/utils.ts"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "src/drive-picker/drive-picker-docs-view.ts",
			"declarations": [
				{
					"kind": "class",
					"description": "The `drive-picker-docs-view` element is used to define a view for the Google Drive Picker.",
					"name": "DrivePickerDocsViewElement",
					"members": [
						{
							"kind": "field",
							"name": "label",
							"type": {
								"text": "string | undefined"
							},
							"attribute": "label"
						},
						{
							"kind": "field",
							"name": "viewId",
							"type": {
								"text": "ViewId"
							},
							"default": "\"DOCS\"",
							"attribute": "view-id"
						},
						{
							"kind": "field",
							"name": "mimeTypes",
							"type": {
								"text": "string | undefined"
							},
							"attribute": "mime-types"
						},
						{
							"kind": "field",
							"name": "query",
							"type": {
								"text": "string | undefined"
							},
							"attribute": "query"
						},
						{
							"kind": "field",
							"name": "enableDrives",
							"type": {
								"text": "boolean | undefined"
							},
							"attribute": "enable-drives"
						},
						{
							"kind": "field",
							"name": "includeFolders",
							"type": {
								"text": "boolean | undefined"
							},
							"attribute": "include-folders"
						},
						{
							"kind": "field",
							"name": "selectFolderEnabled",
							"type": {
								"text": "boolean | undefined"
							},
							"attribute": "select-folder-enabled"
						},
						{
							"kind": "field",
							"name": "mode",
							"type": {
								"text": "DocsViewMode"
							},
							"default": "\"GRID\"",
							"attribute": "mode"
						},
						{
							"kind": "field",
							"name": "ownedByMe",
							"type": {
								"text": "boolean | undefined"
							},
							"attribute": "owned-by-me"
						},
						{
							"kind": "field",
							"name": "parent",
							"type": {
								"text": "string | undefined"
							},
							"attribute": "parent"
						},
						{
							"kind": "field",
							"name": "starred",
							"type": {
								"text": "boolean | undefined"
							},
							"attribute": "starred"
						},
						{
							"kind": "field",
							"name": "view",
							"type": {
								"text": "google.picker.DocsView"
							},
							"privacy": "public",
							"description": "Gets the Google Drive Picker view based on the current property values.",
							"return": {
								"type": {
									"text": "google.picker.DocsView"
								}
							},
							"readonly": true
						}
					],
					"attributes": [
						{
							"name": "label",
							"type": {
								"text": "string | undefined"
							},
							"fieldName": "label"
						},
						{
							"name": "view-id",
							"type": {
								"text": "ViewId"
							},
							"default": "\"DOCS\"",
							"fieldName": "viewId"
						},
						{
							"name": "mime-types",
							"type": {
								"text": "string | undefined"
							},
							"fieldName": "mimeTypes"
						},
						{
							"name": "query",
							"type": {
								"text": "string | undefined"
							},
							"fieldName": "query"
						},
						{
							"name": "enable-drives",
							"type": {
								"text": "boolean | undefined"
							},
							"fieldName": "enableDrives"
						},
						{
							"name": "include-folders",
							"type": {
								"text": "boolean | undefined"
							},
							"fieldName": "includeFolders"
						},
						{
							"name": "select-folder-enabled",
							"type": {
								"text": "boolean | undefined"
							},
							"fieldName": "selectFolderEnabled"
						},
						{
							"name": "mode",
							"type": {
								"text": "DocsViewMode"
							},
							"default": "\"GRID\"",
							"fieldName": "mode"
						},
						{
							"name": "owned-by-me",
							"type": {
								"text": "boolean | undefined"
							},
							"fieldName": "ownedByMe"
						},
						{
							"name": "parent",
							"type": {
								"text": "string | undefined"
							},
							"fieldName": "parent"
						},
						{
							"name": "starred",
							"type": {
								"text": "boolean | undefined"
							},
							"fieldName": "starred"
						}
					],
					"superclass": {
						"name": "LitElement",
						"package": "lit"
					},
					"tagName": "drive-picker-docs-view",
					"customElement": true
				}
			],
			"exports": [
				{
					"kind": "js",
					"name": "DrivePickerDocsViewElement",
					"declaration": {
						"name": "DrivePickerDocsViewElement",
						"module": "src/drive-picker/drive-picker-docs-view.ts"
					}
				},
				{
					"kind": "custom-element-definition",
					"name": "drive-picker-docs-view",
					"declaration": {
						"name": "DrivePickerDocsViewElement",
						"module": "src/drive-picker/drive-picker-docs-view.ts"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "src/drive-picker/drive-picker.stories.ts",
			"declarations": [
				{
					"kind": "variable",
					"name": "meta",
					"type": {
						"text": "Meta<DrivePickerElementProps>"
					},
					"default": "{ title: \"Drive Picker\", tags: [\"autodocs\"], decorators: [withActions], parameters: { actions: { handles: [\"picked\", \"cancel\"] }, }, render: (props: DrivePickerElementProps) => drivePickerTemplate(props), argTypes: { appId: { control: \"text\" }, clientId: { control: \"text\" }, oauthToken: { control: \"text\" }, visible: { control: \"boolean\" }, }, args: { visible: true, }, }"
				},
				{
					"kind": "variable",
					"name": "Primary",
					"type": {
						"text": "Story"
					},
					"default": "{ args: { visible: true, clientId: \"675807958095-nsptdcn5qdb6pl44cge1c6ghact9t5q0.apps.googleusercontent.com\", developerKey: \"AIzaSyAdqZwr-cdocUdGbt9l0zc5s58jnrGseOY\", appId: \"675807958095\", }, }"
				},
				{
					"kind": "variable",
					"name": "DocsView",
					"type": {
						"text": "Story"
					},
					"default": "{ args: { visible: true, clientId: \"675807958095-nsptdcn5qdb6pl44cge1c6ghact9t5q0.apps.googleusercontent.com\", developerKey: \"AIzaSyAdqZwr-cdocUdGbt9l0zc5s58jnrGseOY\", appId: \"675807958095\", }, render: (props: DrivePickerElementProps) => drivePickerTemplate( props, html`<drive-picker-docs-view ownedByMe=\"\"></drive-picker-docs-view>` ), }"
				}
			],
			"exports": [
				{
					"kind": "js",
					"name": "default",
					"declaration": {
						"name": "meta",
						"module": "src/drive-picker/drive-picker.stories.ts"
					}
				},
				{
					"kind": "js",
					"name": "Primary",
					"declaration": {
						"name": "Primary",
						"module": "src/drive-picker/drive-picker.stories.ts"
					}
				},
				{
					"kind": "js",
					"name": "DocsView",
					"declaration": {
						"name": "DocsView",
						"module": "src/drive-picker/drive-picker.stories.ts"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "src/drive-picker/drive-picker.ts",
			"declarations": [
				{
					"kind": "class",
					"description": "The `drive-picker` web component provides a convenient way to integrate the Google Picker API into your web applications. The Google Picker API is a JavaScript API that allows users to select or upload Google Drive files. This component acts as a \"File Open\" dialog for accessing and interacting with files stored on Google Drive.\n\nFeatures:\n- Provides a similar look-and-feel to the Google Drive UI.\n- Offers several views showing previews and thumbnail images of Drive files.\n- Displays as an inline, modal window, ensuring users never leave the main application.\n\nNote: The Google Picker API does not support file organization, moving, or copying. For these operations, you should use either the Google Drive API or the Drive UI.",
					"name": "DrivePickerElement",
					"slots": [
						{
							"description": "The View elements to display in the picker. Each View element should implement a property `view` of type `google.picker.View`.",
							"name": ""
						}
					],
					"members": [
						{
							"kind": "field",
							"name": "picker",
							"type": {
								"text": "google.picker.Picker | undefined"
							},
							"privacy": "private"
						},
						{
							"kind": "field",
							"name": "observer",
							"type": {
								"text": "MutationObserver | undefined"
							},
							"privacy": "protected"
						},
						{
							"kind": "field",
							"name": "_oauthToken",
							"type": {
								"text": "string | undefined"
							},
							"privacy": "private"
						},
						{
							"kind": "field",
							"name": "appId",
							"type": {
								"text": "string"
							},
							"description": "The Google Drive app ID.",
							"attribute": "app-id"
						},
						{
							"kind": "field",
							"name": "clientId",
							"type": {
								"text": "string"
							},
							"description": "The Google API client ID.",
							"attribute": "client-id"
						},
						{
							"kind": "field",
							"name": "developerKey",
							"type": {
								"text": "string | undefined"
							},
							"description": "The Google API developer key.",
							"attribute": "developerKey"
						},
						{
							"kind": "field",
							"name": "height",
							"type": {
								"text": "number | undefined"
							},
							"description": "The height of the picker dialog.",
							"attribute": "height"
						},
						{
							"kind": "field",
							"name": "hideTitleBar",
							"type": {
								"text": "boolean | undefined"
							},
							"description": "Whether to hide the title bar of the picker dialog.",
							"attribute": "hide-title-bar"
						},
						{
							"kind": "field",
							"name": "locale",
							"type": {
								"text": "string | undefined"
							},
							"description": "The locale of the picker dialog.",
							"attribute": "locale"
						},
						{
							"kind": "field",
							"name": "maxItems",
							"type": {
								"text": "number | undefined"
							},
							"description": "The maximum number of items that the user can select.",
							"attribute": "max-items"
						},
						{
							"kind": "field",
							"name": "multiselect",
							"type": {
								"text": "boolean | undefined"
							},
							"description": "Whether the user can select multiple items.",
							"attribute": "multiselect"
						},
						{
							"kind": "field",
							"name": "oauthToken",
							"type": {
								"text": "string | undefined"
							},
							"description": "The OAuth token to authenticate the user.",
							"attribute": "oauth-token"
						},
						{
							"kind": "field",
							"name": "origin",
							"type": {
								"text": "string | undefined"
							},
							"description": "The origin of the picker dialog.",
							"attribute": "origin"
						},
						{
							"kind": "field",
							"name": "relayUrl",
							"type": {
								"text": "string | undefined"
							},
							"description": "The relay URL to use for cross-origin communication.",
							"attribute": "relay-url"
						},
						{
							"kind": "field",
							"name": "scope",
							"type": {
								"text": "string"
							},
							"default": "\"https://www.googleapis.com/auth/drive.file\"",
							"description": "The scope of the OAuth token.",
							"attribute": "scope"
						},
						{
							"kind": "field",
							"name": "title",
							"type": {
								"text": "string"
							},
							"default": "\"\"",
							"description": "The title of the picker dialog.",
							"attribute": "title"
						},
						{
							"kind": "field",
							"name": "visible",
							"type": {
								"text": "boolean"
							},
							"default": "true",
							"description": "Whether the picker dialog is visible.",
							"attribute": "visible",
							"reflects": true
						},
						{
							"kind": "field",
							"name": "width",
							"type": {
								"text": "number | undefined"
							},
							"description": "The width of the picker dialog.",
							"attribute": "width"
						},
						{
							"kind": "field",
							"name": "views",
							"type": {
								"text": "View[]"
							},
							"description": "The `google.Picker.View` objects to display in the picker as defined by the slot elements.",
							"readonly": true
						},
						{
							"kind": "method",
							"name": "build",
							"privacy": "private"
						},
						{
							"kind": "method",
							"name": "callbackToDispatchEvent",
							"privacy": "private",
							"parameters": [
								{
									"name": "data",
									"type": {
										"text": "google.picker.ResponseObject"
									}
								}
							]
						},
						{
							"kind": "method",
							"name": "dispatch",
							"privacy": "private",
							"parameters": [
								{
									"name": "type",
									"type": {
										"text": "\"cancel\" | \"picked\""
									}
								},
								{
									"name": "detail",
									"type": {
										"text": "google.picker.ResponseObject"
									}
								}
							]
						}
					],
					"events": [
						{
							"name": "type",
							"type": {
								"text": "CustomEvent"
							}
						},
						{
							"description": "Triggered when the user cancels the picker dialog.",
							"name": "cancel"
						},
						{
							"description": "Triggered when the user picks one or more items.",
							"name": "picked"
						}
					],
					"attributes": [
						{
							"name": "app-id",
							"type": {
								"text": "string"
							},
							"description": "The Google Drive app ID.",
							"fieldName": "appId"
						},
						{
							"name": "client-id",
							"type": {
								"text": "string"
							},
							"description": "The Google API client ID.",
							"fieldName": "clientId"
						},
						{
							"name": "developerKey",
							"type": {
								"text": "string | undefined"
							},
							"description": "The Google API developer key.",
							"fieldName": "developerKey"
						},
						{
							"name": "height",
							"type": {
								"text": "number | undefined"
							},
							"description": "The height of the picker dialog.",
							"fieldName": "height"
						},
						{
							"name": "hide-title-bar",
							"type": {
								"text": "boolean | undefined"
							},
							"description": "Whether to hide the title bar of the picker dialog.",
							"fieldName": "hideTitleBar"
						},
						{
							"name": "locale",
							"type": {
								"text": "string | undefined"
							},
							"description": "The locale of the picker dialog.",
							"fieldName": "locale"
						},
						{
							"name": "max-items",
							"type": {
								"text": "number | undefined"
							},
							"description": "The maximum number of items that the user can select.",
							"fieldName": "maxItems"
						},
						{
							"name": "multiselect",
							"type": {
								"text": "boolean | undefined"
							},
							"description": "Whether the user can select multiple items.",
							"fieldName": "multiselect"
						},
						{
							"name": "oauth-token",
							"type": {
								"text": "string | undefined"
							},
							"description": "The OAuth token to authenticate the user.",
							"fieldName": "oauthToken"
						},
						{
							"name": "origin",
							"type": {
								"text": "string | undefined"
							},
							"description": "The origin of the picker dialog.",
							"fieldName": "origin"
						},
						{
							"name": "relay-url",
							"type": {
								"text": "string | undefined"
							},
							"description": "The relay URL to use for cross-origin communication.",
							"fieldName": "relayUrl"
						},
						{
							"name": "scope",
							"type": {
								"text": "string"
							},
							"default": "\"https://www.googleapis.com/auth/drive.file\"",
							"description": "The scope of the OAuth token.",
							"fieldName": "scope"
						},
						{
							"name": "title",
							"type": {
								"text": "string"
							},
							"default": "\"\"",
							"description": "The title of the picker dialog.",
							"fieldName": "title"
						},
						{
							"name": "visible",
							"type": {
								"text": "boolean"
							},
							"default": "true",
							"description": "Whether the picker dialog is visible.",
							"fieldName": "visible"
						},
						{
							"name": "width",
							"type": {
								"text": "number | undefined"
							},
							"description": "The width of the picker dialog.",
							"fieldName": "width"
						}
					],
					"superclass": {
						"name": "LitElement",
						"package": "lit"
					},
					"tagName": "drive-picker",
					"customElement": true
				}
			],
			"exports": [
				{
					"kind": "js",
					"name": "DrivePickerElement",
					"declaration": {
						"name": "DrivePickerElement",
						"module": "src/drive-picker/drive-picker.ts"
					}
				},
				{
					"kind": "custom-element-definition",
					"name": "drive-picker",
					"declaration": {
						"name": "DrivePickerElement",
						"module": "src/drive-picker/drive-picker.ts"
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "src/drive-picker/index.ts",
			"declarations": [],
			"exports": [
				{
					"kind": "js",
					"name": "DrivePickerElement",
					"declaration": {
						"name": "DrivePickerElement",
						"module": "\"./drive-picker\""
					}
				},
				{
					"kind": "js",
					"name": "DrivePickerElementProps",
					"declaration": {
						"name": "DrivePickerElementProps",
						"module": "\"./drive-picker\""
					}
				},
				{
					"kind": "js",
					"name": "DrivePickerDocsViewElement",
					"declaration": {
						"name": "DrivePickerDocsViewElement",
						"module": "\"./drive-picker-docs-view\""
					}
				},
				{
					"kind": "js",
					"name": "DrivePickerDocsViewElementProps",
					"declaration": {
						"name": "DrivePickerDocsViewElementProps",
						"module": "\"./drive-picker-docs-view\""
					}
				}
			]
		},
		{
			"kind": "javascript-module",
			"path": "src/drive-picker/types.ts",
			"declarations": [],
			"exports": []
		},
		{
			"kind": "javascript-module",
			"path": "coverage/lcov-report/block-navigation.js",
			"declarations": [],
			"exports": []
		},
		{
			"kind": "javascript-module",
			"path": "coverage/lcov-report/prettify.js",
			"declarations": [],
			"exports": []
		},
		{
			"kind": "javascript-module",
			"path": "coverage/lcov-report/sorter.js",
			"declarations": [],
			"exports": []
		}
	]
}
